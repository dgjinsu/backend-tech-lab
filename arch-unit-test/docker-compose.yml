version: '3.8'

services:
#  app1:
#    container_name: app1
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - "8000:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/testDB
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: postgres
#    depends_on:
#      - postgres
#      - zookeeper
#      - kafka
#      - kafka-ui
#    volumes:
#      - /home/js.kim/pinpoint/pinpoint-agent-3.0.1:/pinpoint
#    networks:
#      - mirero

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: testDB
    ports:
      - "15432:5432"
    networks:
      - mirero

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "12181:2181"
    networks:
      - mirero

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 10485760  # 메시지 크기 제한 10MB
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper
    networks:
      - mirero

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      SERVER_PORT: 9000
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - mirero

networks:
  mirero:
    driver: bridge