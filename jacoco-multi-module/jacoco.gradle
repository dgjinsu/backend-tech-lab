subprojects {
    apply plugin: 'jacoco'

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
        finalizedBy 'jacocoTestReport' // 테스트 후 JaCoCo 실행
    }

    tasks.named('jacocoTestReport') {
        dependsOn test

        reports {
            xml.required = false
            csv.required = true
            html.required = true
        }

        executionData.from = fileTree(dir: "$buildDir/jacoco", includes: ["*.exec"])

        classDirectories.setFrom(
                files(sourceSets.main.output)
                        .filter { it.exists() }
                        .asFileTree.matching {
                    exclude "**/dto/**"      // DTO 패키지 제외
                    exclude "**/Q*.class"    // QueryDSL Q-Class 제외
                }
        )
    }
}

task testCodeCoverageReport(type: JacocoReport) {
    dependsOn subprojects.test  // 모든 하위 모듈의 test 실행 후 실행

    // 하위 모듈의 test.exec 를 가져옴
    executionData.from = files(subprojects.jacocoTestReport.executionData)

    // 하위 모듈의 클래스 파일 가져옴
    additionalClassDirs.setFrom(files(subprojects.sourceSets.main.output))

    // 하위 모듈의 소스 코드 경로를 가져옴
    sourceDirectories.setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))

    reports {
        xml.required = false
        csv.required = true
        html.required = true
    }
}
