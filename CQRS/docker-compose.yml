version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      # Listener를 여러 개 사용할 경우, 고유한 이름 필요
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093 # 고유한 리스너 이름으로 설정
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT # 리스너 이름에 프로토콜 매핑
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093 # Kafka 브로커가 실제로 수신하는 리스너 설정
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL #  Kafka의 브로커 간 통신에 사용할 리스너를 지정
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "todoApp:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9092:9092"  # INTERNAL 리스너 포트 매핑
      - "9093:9093"  # EXTERNAL 리스너 포트 매핑
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      SERVER_PORT: 9000
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092 # Docker 네트워크의 INTERNAL 리스너로 연결

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    environment:
      MONGO_INITDB_DATABASE: order_query
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - "27017:27017"

  postgres-order:
    image: postgres:latest
    container_name: postgres-order
    environment:
      POSTGRES_DB: order_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
#      POSTGRES_INITDB_ARGS: "--wal-level=logical"
    ports:
      - "5433:5432"

  postgres-product:
    image: postgres:latest
    container_name: postgres-product
    environment:
      POSTGRES_DB: product_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"

#  kafka-connect:
#    image: debezium/connect:2.7.3.Final
#    container_name: kafka-connect
#    depends_on:
#      - kafka
#    ports:
#      - "8070:8083"
#    environment:
#      BOOTSTRAP_SERVERS: kafka:9092
#      GROUP_ID: "kafka-connect"
#      CONFIG_STORAGE_TOPIC: "connect-configs"
#      OFFSET_STORAGE_TOPIC: "connect-offsets"
#      STATUS_STORAGE_TOPIC: "connect-status"
#      CONNECT_PLUGIN_PATH: "/kafka/connect/plugins"
#    volumes:
#      - ./connector:/kafka/connect/plugins
#
#  debezium-ui:
#    image: debezium/debezium-ui:latest
#    container_name: debezium-ui
#    depends_on:
#      - kafka-connect
#    environment:
#      KAFKA_CONNECT_URIS: "http://kafka-connect:8083"
#    ports:
#      - "8071:8080"